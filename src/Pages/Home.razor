@page "/"
@using ToDo.Model
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<PageTitle>Home</PageTitle>

<h1>ToDo</h1>

<style>
    .tasks {
        list-style-type: none;
        padding: 0;
    }
    .tasks li {
        padding: 0.5rem;
        border-bottom: 1px solid #ccc;
    }
    .tasks li:last-child {
        border-bottom: none;
    }
</style>

<div class="row">
    <div class="col-md-6">
        <h2>Tasks</h2>
        <ul class="tasks">
            @foreach (var task in Tasks)
            {
                <li><input type="checkbox" checked="@task.IsDone" @onchange="SaveTasks"> @task.Title  (<button onclick="@DeleteTask(task.Id)">❌</button>)</li>
            }
        </ul>
    </div>

    <div class="col-md-6">
        <h2>Add Task</h2>
        <input type="text" class="form-control" @bind="newTaskTitle" @onkeypress="OnKeyPress" placeholder="Enter a task title" />
        <button class="btn btn-primary mt-2" @onclick="AddTask">Add Task</button>
    </div>
</div>

@code {
    private List<ToDoTask> Tasks { get; set; } = new List<ToDoTask>();
    private string? newTaskTitle { get; set; }

    private void DeleteTask(string id)
    {
        Tasks.RemoveAll(t => t.Id == id);
        SaveTasks();
    }

    private async Task OnKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            AddTask();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var tasks = await localStorage.GetItemAsync<List<ToDoTask>>("tasks");
        if (tasks != null)
        {
            Tasks = tasks;
        }
    }

    private void AddTask()
    {
        if (string.IsNullOrEmpty(newTaskTitle)) {
            return;
        }

        Tasks.Add(new ToDoTask { Title = newTaskTitle });
        newTaskTitle = string.Empty;
        SaveTasks();
    }

    private void SaveTasks()
    {
        localStorage.SetItemAsync("tasks", Tasks);
    }
}